#!/usr/bin/env node

const Promise = require('bluebird')
const { docopt } = require('docopt')
const fs = Promise.promisifyAll(require('fs-extra'))

const { version } = require('../package.json')
const { initDb, Page } = require('../src/db')
const fetch = require('../src/fetch')
const { archivePath } = require('../src/util')

const doc = `
Erised -- ${version}

Usage:
  erised list
  erised <url> [--tags=<tags>]

Options:
  --tags=<tags> String of tags (e.g. nodejs,backend,job)
`

const opts = docopt(doc)

function init() {
  return Promise.join(
    fs.mkdirpAsync(archivePath),
    initDb()
  )
}

const { list } = opts
const url = opts['<url>']
let tags = opts['--tags']

if (list) {
  init()
    .then(() => Page.findAll())
    .each(page => {
      console.log(JSON.stringify(page))
    })
} else if (url) {
  tags = tags || ''

  init()
    .then(() => fetch(url))
    .tap(res => res.tags = tags)
    .then(res => Page.create(res))
    .tap(page => console.log(JSON.stringify(page)))
} else {
  console.log(doc)
  process.exit(1) 
}
